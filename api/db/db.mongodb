use("login");

db.createCollection("counters");
db.counters.insertOne({
    counter: "usersId", sequence: 0
})
const autoIncrement = (collection) => {
    const update = db.counters.findOneAndUpdate(
       { counter: `${collection}Id`},
       { $inc: { sequence: 1 }},
       { returnDocument: "after" }
    )
    return update.sequence
}

db.createCollection("users", {
    capped: false,
    validator: {
        $jsonSchema: {
            "bsonType": "object",
            required: ["id", "name", "password", "role"],
            properties: {
                _id: {
                    bsonType: "objectId",
                },
                id: {
                    bsonType: "number",
                    description: "id is required. Must be a interger"
                },
                name: {
                    bsonType: "string",
                    pattern: "^[A-Za-z\\s]+$",
                    description: "id is required. Must be a string without special characters"
                },
                password: {
                    bsonType: "string",
                    description: "password is required. Must be a string"
                },
                role: {
                    bsonType: "string",
                    enum: ["admin", "user"],
                    description: "rol is required. Must be a valid string 'admin', 'user'"
                },
                allowances: {
                    bsonType: "object",
                    properties: {
                        "/app": {
                            bsonType: "array",
                            items: {
                                bsonType: "string"
                            }
                        }
                    }
                }
            }
        }
    }
});

db.users.insertMany([
    {
        id: autoIncrement("users"),
        name: "John Doe",
        password: "password123",
        role: "admin",
        allowances: {
            "/app": ["1.0.0", "GET", "POST", "PATCH", "DELETE"]
        }
    },
    db.users.insert({
        id: autoIncrement("users"),
        name: "Jane Doe",
        password: "password456",
        role: "user",
        allowances: {
            "/app": ["1.0.0", "GET"]
        }
    }),   
    db.users.insert({
        id: autoIncrement("users"),
        name: "Susan Smith",
        password: "password789",
        role: "admin",
        allowances: {
            "/app": ["1.0.0", "GET", "POST", "PATCH", "DELETE"]
        }
    }),  
    db.users.insert({
        id: autoIncrement("users"),
        name: "Peter Jones",
        password: "password1011",
        role: "user",
        allowances: {
            "/app": ["1.0.0", "GET"]
        }
    }),
])

